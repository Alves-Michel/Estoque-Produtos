package pkg8.app.estoque;import java.util.ArrayList;import pkg8.app.estoque.DAO.ProductDAO;import pkg8.app.estoque.entity.Product;public class app extends javax.swing.JFrame {     ArrayList<Product> produtoPrincipal = new ArrayList<Product>();       Product produto = new Product();        ProductDAO productDAO = new ProductDAO();    public app() {        initComponents();    }    @SuppressWarnings("unchecked")    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents    private void initComponents() {        jLabel1 = new javax.swing.JLabel();        txtNameProduct = new javax.swing.JTextField();        jLabel2 = new javax.swing.JLabel();        txtPrice = new javax.swing.JTextField();        jLabel3 = new javax.swing.JLabel();        txtAmount = new javax.swing.JTextField();        jLabel4 = new javax.swing.JLabel();        txtCodigo = new javax.swing.JTextField();        jScrollPane1 = new javax.swing.JScrollPane();        txtResultado = new javax.swing.JTextArea();        consultar = new javax.swing.JButton();        atualizar = new javax.swing.JButton();        cadastrar = new javax.swing.JButton();        remover = new javax.swing.JButton();        listar = new javax.swing.JButton();        totalEstoque = new javax.swing.JButton();        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);        jLabel1.setText("NOME:");        txtNameProduct.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                txtNameProductActionPerformed(evt);            }        });        jLabel2.setText("PRE??O:");        txtPrice.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                txtPriceActionPerformed(evt);            }        });        jLabel3.setText("QUANTIDADE: ");        txtAmount.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                txtAmountActionPerformed(evt);            }        });        jLabel4.setText("C??DIGO:");        txtCodigo.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                txtCodigoActionPerformed(evt);            }        });        txtResultado.setColumns(20);        txtResultado.setRows(5);        jScrollPane1.setViewportView(txtResultado);        consultar.setText("CONSULTAR");        consultar.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                consultarActionPerformed(evt);            }        });        atualizar.setText("ATUALIZAR");        atualizar.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                atualizarActionPerformed(evt);            }        });        cadastrar.setText("CADASTRAR");        cadastrar.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                cadastrarActionPerformed(evt);            }        });        remover.setText("REMOVER PRODUTOS");        remover.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                removerActionPerformed(evt);            }        });        listar.setText("LISTAR PRODUTOS");        listar.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                listarActionPerformed(evt);            }        });        totalEstoque.setText("CALCULO TOTAL ESTOQUE");        totalEstoque.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                totalEstoqueActionPerformed(evt);            }        });        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());        getContentPane().setLayout(layout);        layout.setHorizontalGroup(            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)            .addGroup(layout.createSequentialGroup()                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                    .addGroup(layout.createSequentialGroup()                        .addGap(73, 73, 73)                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)                            .addGroup(layout.createSequentialGroup()                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)                                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))                            .addGroup(layout.createSequentialGroup()                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)                                    .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))                    .addGroup(layout.createSequentialGroup()                        .addGap(39, 39, 39)                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)                            .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))                    .addGroup(layout.createSequentialGroup()                        .addGap(39, 39, 39)                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)                            .addComponent(consultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                            .addComponent(listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                            .addGroup(layout.createSequentialGroup()                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)                                .addComponent(atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()                                .addGap(12, 12, 12)                                .addComponent(remover)))                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)                        .addComponent(totalEstoque)))                .addContainerGap(462, Short.MAX_VALUE))        );        layout.setVerticalGroup(            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)            .addGroup(layout.createSequentialGroup()                .addGap(56, 56, 56)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(jLabel1)                    .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))                .addGap(18, 18, 18)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)                    .addComponent(jLabel2))                .addGap(18, 18, 18)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(jLabel3)                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))                .addGap(18, 18, 18)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)                    .addComponent(jLabel4))                .addGap(18, 18, 18)                .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)                    .addComponent(remover, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)                    .addComponent(totalEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    .addComponent(listar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)                    .addComponent(atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))                .addGap(18, 18, 18)                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)                .addGap(23, 23, 23))        );        pack();    }// </editor-fold>//GEN-END:initComponents    private void txtNameProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameProductActionPerformed        // TODO add your handling code here:    }//GEN-LAST:event_txtNameProductActionPerformed    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed        // TODO add your handling code here:    }//GEN-LAST:event_txtPriceActionPerformed    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed        // TODO add your handling code here:    }//GEN-LAST:event_txtAmountActionPerformed    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed        // TODO add your handling code here:    }//GEN-LAST:event_txtCodigoActionPerformed    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed        int codigo = Integer.parseInt(txtCodigo.getText().trim());        produto = null;                    for (Product p : productDAO.getProducts()) {                        if (p.getCodigo() == codigo) {                            produto = p;                            break;                        }                    }                    if (produto == null) {                        txtResultado.setText("    Produto nao encontrado: ");                    }                    txtResultado.setText(produto.toString());    }//GEN-LAST:event_consultarActionPerformed    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed        int codigo = Integer.parseInt(txtCodigo.getText().trim());        // Buscar o produto pelo c??digo        Product produtoParaAtualizar = null;        for (Product p : productDAO.getProducts()) {            if (p.getCodigo() == codigo) {                produtoParaAtualizar = p;                break; // Sai do loop assim que encontrar o produto            }        }        if (produtoParaAtualizar == null) {            txtResultado.setText("Produto n??o encontrado.");        }        String nome = txtNameProduct.getText();        produtoParaAtualizar.setNameProduct(nome);        productDAO.update(produtoParaAtualizar);        txtResultado.setText("Produto atualizado com sucesso.");    }//GEN-LAST:event_atualizarActionPerformed    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed               try{            String nome = txtNameProduct.getText();            double preco = Double.parseDouble(txtPrice.getText());            int quantidade = Integer.parseInt(txtAmount.getText());            int codigo = Integer.parseInt( txtCodigo.getText());                        Product novoProduto = new Product(nome, preco, quantidade, codigo);                    produtoPrincipal.add(novoProduto);                     productDAO.cadastrarProduto(novoProduto);                            }catch (Exception erro) {            txtResultado.setText("Erro nos dados digitados!");    }//GEN-LAST:event_cadastrarActionPerformed   }        private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed       try {            int codigo = Integer.parseInt(txtCodigo.getText().trim());            Product produtoParaRemover = null;            for (Product p : productDAO.getProducts()) {                if (p.getCodigo() == codigo) {                    produtoParaRemover = p;                    break;                }            }            if (produtoParaRemover != null) {                productDAO.deleteById(produtoParaRemover);                txtResultado.setText("Produto removido com sucesso!");            } else {                txtResultado.setText("Produto n??o encontrado!");            }        } catch (NumberFormatException e) {            txtResultado.setText("C??digo inv??lido. Por favor, insira um n??mero v??lido.");        }    }//GEN-LAST:event_removerActionPerformed        private void listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarActionPerformed        StringBuilder resultado = new StringBuilder();        for (Product p : productDAO.getProducts()) {            resultado.append(p.toString()).append("\n");        }        txtResultado.setText(resultado.toString());    }//GEN-LAST:event_listarActionPerformed    private void totalEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalEstoqueActionPerformed        double ValorTotalEmEstoque = 0;                    for (Product p : productDAO.getProducts()) {                        produto = p;                        ValorTotalEmEstoque += produto.CalcularTotalEmEstoque();                    }                    txtResultado.setText("Valor total do estoque: R$" + ValorTotalEmEstoque);                        }//GEN-LAST:event_totalEstoqueActionPerformed  public static void main(String args[]) {        java.awt.EventQueue.invokeLater(() -> new app().setVisible(true));    }    /**     * @param args the command line arguments     */      // Variables declaration - do not modify//GEN-BEGIN:variables    private javax.swing.JButton atualizar;    private javax.swing.JButton cadastrar;    private javax.swing.JButton consultar;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel4;    private javax.swing.JScrollPane jScrollPane1;    private javax.swing.JButton listar;    private javax.swing.JButton remover;    private javax.swing.JButton totalEstoque;    private javax.swing.JTextField txtAmount;    private javax.swing.JTextField txtCodigo;    private javax.swing.JTextField txtNameProduct;    private javax.swing.JTextField txtPrice;    private javax.swing.JTextArea txtResultado;    // End of variables declaration//GEN-END:variables}